----Дипломный проект====================
--Создал новцю схему под дипломный проект
USE SQL221
create schema GPNY; -- Graduation project Nayda Yan 

  ---=======================Задача № 1. Создание таблицы PRODUCTS=================

  create table [GPNY].[PRODUCTS] (
[MFR_ID]                 char(3)      not null,              -- Идентификатор производителя (строка постоянной длинны(3),не может быть пустым) 
[PRODUCT_ID]             char(5)      not null,              -- Идентификатор товара        (строка постоянной длинны(5),не может быть пустым) 
[DESCRIPTION]            nvarchar(50) not null,              -- Описание товара             (строка переменной длинны(50),не может быть пустым) 
[PRICE]                  numeric(9,2) not null,              -- Цена товара                 (точное десятичное число точность  9 масштаб  2, не может быть пустым)
[QTY_ON_HAND]            int          not null,              -- Количество на складе        (точное целое число, не может быть пустым)
Constraint pk_products primary key(MFR_ID,PRODUCT_ID)        -- Составной первичный ключ    (Идентификатор производителя,Идентификатор товара)
  );


   ---=======================Задача № 2.Создание таблицы OFFICES================= 


  create table [GPNY].[OFFICES] (
[OFFICE]     int PRIMARY KEY IDENTITY (1,1)         not null,            -- Идентификатор офиса              (точное целое число, не может быть пустым)
[CITY]       nvarchar(15) unique                    not null,            -- Город в котором находится офис   (строка переменной длинны(15), не может быть пустым)
[REGION]     nvarchar(10) default 'Eastern'         not null,            -- Регион в котором находится офис  (строка переменной длинны(10), не может быть пустым, значение по умолчанию 'Eastern' )
[MGR]        int default 106,                                            -- Идентфикатор управляющего офисом (точное целое число, значение по умолчанию 106)
[TARGET]     numeric(9,2) check ([TARGET] >= 0),                         -- Плановые продажи (точное десятичное число точность  9  масштаб  2, не может быть меньше нуля) 
[SALES]      numeric(9,2) default 0.00              not null             -- Продажи офиса (точное десятичное число  точность  9 масштаб  2, не может быть пустым, значение по умлочанию 0.00) 
   );

/*(OFFICE) -- Первичный ключ                   (идентификатор офиса)
(CITY)   -- Ограничение город должен быть уникальным */

   ---=======================Задача № 3.Создание таблицы SALESREPS================= 

   create table [GPNY].[SALESREPS] (
[EMPL_NUМ]  int primary key check ([EMPL_NUМ] > 100 and [EMPL_NUМ] < 200)     not null,       -- Идентификатор служащего (точное целое число, должен быть в диапазоне 101 - 199, не может быть пустым) 
[NАМЕ]      nvarchar(15)                                                      not null,       -- Имя служащего (строка переменной длинны(15), не может быть пустым)
[AGE]       int check ([AGE] >= 21),                                                          -- Возраст служащего (точное целое число, должен быть больше или равен 21)
[REPOFFICE] int foreign key REFERENCES [GPNY].[OFFICES]([OFFICE]),                            -- Офис в котором работает служащий (точное целое число)
[TITLE]     nvarchar(10),                                                                     -- Должность служащего (строка переменной длинны(10))
[HIREDATE]  date                                                              not null,       -- Дата приема на работу(год, месяц, день, не может быть пустым)
[МANAGER]   int,                                                                              -- Идентификатор менеджера данного служащего (точное целое число)
[QUOTA]     numeric(9,2) check ([QUOTA] >= 0),                                                -- Личный план (точное десятичное число точность  9 масштаб  2, не может быть меньше нуля)
[SALES]     numeric(9,2)                                                      not null        -- Фактические продажи служащего (точное десятичное число  точность  9  масштаб 2, не может быть пустым)
    );

/*(EMPL_NUМ)-- Первичный ключ 
[REPOFFICE]        -- Внешний ключ (Офис в котором работает служащий) ссылается на таблицу офисы (Идентификатор офиса)*/


   ---=======================Задача № 4.Модификация таблицы SALESREPS================= 
/*Модификация таблицы служащие
Добавляется внешний ключ (Идентификатор менеджера данного служащего) 
ссылается на таблицу служащие (Идентификатор служащего).*/

alter table [GPNY].[SALESREPS]
	add constraint manager_fk foreign key([МANAGER]) references  [GPNY].[SALESREPS] ([EMPL_NUМ]);


---=======================Задача № 5. Модификация таблицы OFFICES================= 
/*Модификация таблицы офисы
Добавляется внешний ключ (Идентфикатор управляющего офисом) 
ссылается на таблицу служащие (Идентификатор служащего)*/

alter table [GPNY].[OFFICES]
	add constraint mgr_fk foreign key([MGR]) references  [GPNY].[SALESREPS] ([EMPL_NUМ]);

---=======================Задача № 6. Создание таблицы CUSTOMERS================= 
	
 create table [GPNY].[CUSTOMERS] (
[CUST_NUМ]    int primary key                                                 not null,              -- Идентфикатор клиента  (точное целое число, не может быть пустым)
[COMPANY]     nvarchar(20)                                                    not null,              -- Наименование клиента  (строка переменной длинны(20), не может быть пустым)
[CUST_REP]    int foreign key REFERENCES [GPNY].[SALESREPS] ([EMPL_NUМ]),                            -- Закрепленный служащий (точное целое число)
[CREDITLIMIT] numeric(9,2)                                                                           -- Лимит кредитиа        (точное десятичное число точность  9  масштаб 2)
   );

/*(CUST_NUМ)  -- Первичный ключ        (Идентфикатор клиента)
(CUST_REP)  -- Внешний ключ          (Закрепленный служащий) ссылается на таблицу служащие(Идентификатор служащего)*/


---=======================Задача № 7. Создание таблицы ORDERS================= 

create table [GPNY].[ORDERS] (
ORDER_NUМ      int primary key                                                 not null,                           -- Идентификатор заказа       (точное целое число, не может быть пустым)
ORDER_DATE     date                                                            not null,                           -- Дата заказа                (год, месяц, день, не может быть пустым)
CUST           int foreign key REFERENCES [GPNY].[CUSTOMERS] ([CUST_NUМ])      not null,                           -- Идентификатор клиента      (точное целое число, не может быть пустым)
REP            int foreign key REFERENCES [GPNY].[SALESREPS] ([EMPL_NUМ]),                                         -- Идентификатор служащего    (точное целое число)
MFR            char (3)                                                        not null,                           -- Идентификатор производителя товара (строка постоянной длинны(3), не может быть пустым)
PRODUCT        char (5)                                                        not null,                           -- Идентификтор товара        (строка постоянной длинны(5), не может быть пустым)
QTY            int                                                             not null,                           -- Количество товара          (точное целое число, не может быть пустым)
AМOUNT         numeric(9,2)                                                    not null,                           -- Сумма заказа               (точное десятичное число точность  9 масштаб 2, не может быть пустым)
Constraint fk_mfr_product foreign key([MFR],[PRODUCT]) references [GPNY].[PRODUCTS]([MFR_ID],[PRODUCT_ID])         -- Составной внешний ключ (Идентификатор производителя товара, Идентификтор товра) ссылается на таблицу продукты
   );

/*(ORDER_NUМ)      -- Первичный ключ идентификатор заказа 
(CUST)           -- Внешний ключ (Идентификатор клиента) ссылается на таблицу клиенты
(REP)            -- Внешний ключ (Идентификатор служащего) ссылается на таблицу служащие 
(MFR , PRODUCT ) -- Составной внешний ключ (Идентификатор производителя товара, Идентификтор товра) ссылается на таблицу продукты*/

--проверки 
select * from [GPNY].PRODUCTS;
select * from [GPNY].OFFICES
select * from [GPNY].SALESREPS
select * from [GPNY].CUSTOMERS
select * from [GPNY].ORDERS